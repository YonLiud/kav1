name: Build Installer EXE

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Get short SHA
      id: vars
      run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build EXEs
      run: .\build_windows.bat

    - name: Install Inno Setup
      run: choco install innosetup -y

    - name: Build Installer
      run: |
        mkdir C:\installer_output
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" /Qp /O"C:\installer_output" /F"kav1_setup_${{ env.SHORT_SHA }}" kav1.iss
    
    - name: Create tag
      run: |
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git tag -a "v${{ env.SHORT_SHA }}" -m "Tag for build ${{ env.SHORT_SHA }}"
        git push origin "v${{ env.SHORT_SHA }}"


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.SHORT_SHA }}
        release_name: Release v${{ env.SHORT_SHA }}
        draft: false
        prerelease: false

    - name: Upload Installer to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: C:/installer_output/kav1_setup_${{ env.SHORT_SHA }}.exe
        asset_name: kav1_setup_${{ env.SHORT_SHA }}.exe
        asset_content_type: application/octet-stream